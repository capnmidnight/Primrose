// Generated by CoffeeScript 1.12.1
(function() {
  var Adapter, Markdown, nodefn,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Adapter = require('../../adapter_base');

  nodefn = require('when/node/function');

  Markdown = (function(superClass) {
    extend(Markdown, superClass);

    function Markdown() {
      return Markdown.__super__.constructor.apply(this, arguments);
    }

    Markdown.prototype.name = 'markdown';

    Markdown.prototype.extensions = ['md', 'mdown', 'markdown'];

    Markdown.prototype.output = 'html';

    Markdown.prototype.supportedEngines = ['marked'];

    Markdown.prototype.isolated = true;

    Markdown.prototype._render = function(str, options) {
      return nodefn.call(this.engine.bind(this.engine), str, options).then(function(res) {
        return {
          result: res
        };
      });
    };

    return Markdown;

  })(Adapter);

  module.exports = Markdown;

}).call(this);

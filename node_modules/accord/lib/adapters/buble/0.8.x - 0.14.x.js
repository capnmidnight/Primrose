// Generated by CoffeeScript 1.12.1
(function() {
  var Adapter, Buble, W, path, sourcemaps,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Adapter = require('../../adapter_base');

  path = require('path');

  W = require('when');

  sourcemaps = require('../../sourcemaps');

  Buble = (function(superClass) {
    var compile;

    extend(Buble, superClass);

    function Buble() {
      return Buble.__super__.constructor.apply(this, arguments);
    }

    Buble.prototype.name = 'buble';

    Buble.prototype.extensions = ['js'];

    Buble.prototype.output = 'js';

    Buble.prototype.isolated = true;

    Buble.prototype._render = function(str, options) {
      options.source = options.filename;
      return compile((function(_this) {
        return function() {
          return _this.engine.transform(str, options);
        };
      })(this));
    };

    compile = function(fn) {
      var data, err, res;
      try {
        res = fn();
      } catch (error) {
        err = error;
        return W.reject(err);
      }
      data = {
        result: res.code
      };
      if (res.map) {
        return sourcemaps.inline_sources(res.map).then(function(map) {
          data.sourcemap = map;
          return data;
        });
      } else {
        return W.resolve(data);
      }
    };

    return Buble;

  })(Adapter);

  module.exports = Buble;

}).call(this);

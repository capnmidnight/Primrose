var makeWatch = require("./makeWatch");

function stringOrProp(prop){
  return function(obj) {
    if(typeof obj === "string" || obj instanceof String){
      return obj;
    }
    else{
      return obj[prop];
    }
  };
}

function work(gulp, postfix, cacheName, build, name, files, dependencies, post, postData){
  var pre = name + ":" + postfix + ":";
  var debugTaskName = pre + "debug",
    releaseTaskName = pre + "release",
    watchTask = debugTaskName + ":only",
    debugDeps = dependencies && dependencies.map(stringOrProp("debug")) || null,
    releaseDeps = dependencies && dependencies.map(stringOrProp("release")) || null,
    debugTask = build.bind(null, true),
    releaseTask = build.bind(null, false);

  gulp.task(debugTaskName, debugDeps, debugTask);
  gulp.task(watchTask, debugTask);

  gulp.task(releaseTaskName, releaseDeps, releaseTask);

  if (post) {
    gulp.task(pre + "post:debug", [debugTaskName], (cb) => post(postData && postData.debug, cb));
    gulp.task(pre + "post:release", [releaseTaskName], (cb) => post(postData && postData.release, cb));
    debugTaskName = pre + "post:debug";
    releaseTaskName = pre + "post:release";
    watchTask = debugTaskName;
  }

  return {
    default: makeWatch(gulp, watchTask, files, [debugTaskName], cacheName),
    debug: debugTaskName,
    release: releaseTaskName
  };
}

module.exports = work;